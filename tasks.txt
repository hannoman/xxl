

========== RSTree ========== 
 *   DONE Mini-Milestone 1: Implement sample buffer maintenance for insertions.
 *   DONE Mini-Milestone 1.5: Implement QueryCursor for range queries.
 *   DONE Mini-Milestone 2: Implement lazy sampling query cursor
 *   Mini-Milestone 2.5: ReallyLazySamplingCursor should adjust batchSize dynamically to use |Frontier|.
 *   DONE Mini-Milestone 3: Augment ReallyLazySamplingCursor with performance information, like number of nodes visited.
 *   	-> TODO: yet, ReallyLazySamplingCursor needs to count the leaf nodes which got visited indirectly (from an unbuffered
 *   			inner node) too.  
 *   
 *   Future: Supply functions from the NodeConverter for estimating the amount of entries in leaf and inner nodes.
 *   			And to automatically construct a tree with optimally set parameters.
 *   	(first tries can be seen in {@link xxl.core.indexStructures.Test_ApproxQueries#createRSTree(String)}
 *   							and {@link xxl.core.indexStructures.Test_ApproxQueries#createRSTree_withInnerUnbufferedNodes(String)}
 *   	) 
 *   Mini-Milestone: Augment QueryCursor of BPlusTree with profiling capabilities.
 *   Mini-Milestone (50%): Do real tests.
 *		-> Create and save really big trees and then only load them for testing. (DONE for RSTree1D)
 *   	-> Profiling of logical IOs: take a peek at: xxl.core.collections.containers.CounterContainer
 *   		(but that probably wont help)
 * 
 *   Mini-Milestone: Generalize Query-Types
 *   Mini-Milestone: Support removals

========== Important Bugfixes ==========

* ReallyLazySamplingCursor doesn't permute results enough
* OPT: The drawings perhaps permute too much 

========== Futures ==========

* extend to Hilbert-RTrees
 
========== Further testing ==========

* compare to exact BTree query

-- datasets:

* GEO is perhaps handleble with single insertions
	but OSM is probably much too large..
	 
========== Other ==========

* sanity tests of data structures (Test_TestableMap & Test_ApproxQueries) are not well implemented, as there is
	no so far no support to save multiple values in the comparison structure. (DONE)
	-> Also duplicate handling of the trees should be specified better. (DONE)
		-> check out SortMergeJoin and HashGrouper to implement the comparison, aand therefore SweepAreas.
	
* copy updated QueryCursor implementation from RSTree1D to WBTRee and WRSTree_copyImpl

* OPT LOW: simplify/unify TreeCreation.createRSTree_withInnerUnbufferedNodes and TreeCreation.createRSTree	   